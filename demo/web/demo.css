/* Demo-specific overrides to show icon-only main toolbar buttons */

/* Hide label spans in the top toolbar and sidebar toolbar; keep secondaryToolbar labels. */
#toolbarViewer .toolbarButton > span,
#toolbarSidebar .toolbarButton > span,
#toolbarViewer .toolbarButtonWithContainer > .toolbarButton > span {
  display: none !important;
}

/* Ensure buttons remain square icon buttons */
#toolbarViewer .toolbarButton,
#toolbarViewer .toolbarButtonWithContainer > .toolbarButton {
  aspect-ratio: 1;
}

/* Show readable labels in the secondary toolbar for better clarity */
#secondaryToolbar .toolbarButton.labeled > span {
  display: inline-block !important;
}

#secondaryToolbar .toolbarButton.labeled {
  justify-content: flex-start !important;
  padding-inline-start: 12px !important;
}

/* Keep icon-only for top/side toolbars, but NOT the secondary menu */
#toolbarViewer .toolbarButton,
#toolbarSidebar .toolbarButton {
  font-size: 0 !important;
}

/* Ensure secondary toolbar buttons use normal font sizing */
#secondaryToolbar .toolbarButton {
  font-size: inherit !important;
}

/* Make secondary menu a bit wider and animate its entrance */
#secondaryToolbar.menu:not(.hidden) {
  width: min(280px, 92vw);
  animation: secondaryMenuIn 140ms ease-out;
  will-change: transform, opacity;
}

@keyframes secondaryMenuIn {
  from { transform: translateY(-4px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Rotate the tools toggle icon when open to reflect state */
#secondaryToolbarToggleButton.toggled::before {
  transform: scaleX(var(--dir-factor)) rotate(180deg);
}

/* Comment dialog: icon-only UI + polished look */
/* Hide title text and button labels (keep aria only) */
#commentManagerDialog .title span,
#commentManagerDialog .dialogButtonsGroup button span {
  display: none !important;
}
/* No placeholder copy */
#commentManagerTextInput::placeholder {
  color: transparent !important;
}

/* Neutralize inline dynamic bg color for better contrast; keep border color accent */
#commentManagerDialog.dialog.commentManager {
  background: var(--dialog-bg-color) !important;
  /* preserve dynamic borderColor from editor color (set inline by code) */
  box-shadow: 0 8px 24px rgba(0,0,0,.18), 0 2px 8px rgba(0,0,0,.12);
  border-radius: 10px;
  padding: 12px 12px 10px;
}

/* Title bar: compact, draggable area with a close icon */
#commentManagerToolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  min-height: 28px;
  cursor: move;
}

#commentManagerCloseButton {
  width: 28px;
  height: 28px;
  padding: 6px;
  border: none;
  border-radius: 6px;
  background: transparent;
  cursor: pointer;
}
#commentManagerCloseButton::before {
  content: "";
  display: inline-block;
  width: 100%;
  height: 100%;
  mask: url("images/messageBar_closingButton.svg") no-repeat center / 100% 100%;
  background-color: var(--text-primary-color);
}
#commentManagerCloseButton:hover { background: var(--button-secondary-hover-bg-color); }
#commentManagerCloseButton:active { background: var(--button-secondary-active-bg-color); }
#commentManagerCloseButton:focus-visible { outline: var(--focus-ring-outline); }

/* Textarea: clearer padding and readable color, without placeholder text */
#commentManagerTextInput {
  min-height: 132px;
  padding: 10px 12px;
  line-height: 1.4;
  color: var(--input-text-fg-color);
  background: var(--input-text-bg-color);
}

/* Bottom buttons: icon-only, squared and centered */
#commentManagerDialog .dialogButtonsGroup {
  gap: 8px;
}
#commentManagerDialog .dialogButtonsGroup button {
  width: 36px;
  height: 36px;
  padding: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
#commentManagerCancelButton::before,
#commentManagerSaveButton::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 20px;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
}
#commentManagerCancelButton::before {
  mask-image: url("images/messageBar_closingButton.svg");
  background-color: var(--text-primary-color);
}
#commentManagerSaveButton::before {
  mask-image: url("images/annotation-check.svg");
  background-color: var(--button-primary-fg-color);
}
#commentManagerSaveButton:disabled::before {
  opacity: var(--button-disabled-opacity);
}

/* Stamp drag-and-drop overlay */
#stampDropOverlay {
  position: absolute;
  z-index: 20000;
  inset: 0;
  display: none;
  align-items: center;
  justify-content: center;
  border: 2px dashed rgba(128,128,128,.6);
  background: rgba(0,0,0,.05);
  pointer-events: none;
}
#stampDropOverlay.visible { display: flex; }
#stampDropOverlay::before {
  content: attr(data-label);
  content: "Drop image to add stamp"; /* fallback */
  color: var(--main-color);
  font-size: 13px;
  padding: 8px 12px;
  border-radius: 6px;
  background: rgba(0,0,0,.08);
}

/* Small screens: let dialog breathe */
@media (max-width: 540px) {
  #commentManagerDialog.dialog.commentManager {
    width: min(92vw, 420px);
  }
}

/* Alt-Text dialog: icon-only labels and buttons */
#altTextDialog .title, /* hide heading text */
#altTextDialog #dialogDescription, /* hide paragraph text */
#altTextDialog .radioLabel span { /* hide radio descriptive text */
  display: none !important;
}
/* Radio options as icon buttons */
#altTextDialog .radioButton label {
  width: 32px;
  height: 32px;
  padding: 0;
  border-radius: 6px;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent;
}
#altTextDialog .radioButton label::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 20px;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
  background-color: var(--text-primary-color);
}
#altTextDialog label[for="descriptionButton"]::before {
  mask-image: url("images/altText_add.svg");
}
#altTextDialog label[for="decorativeButton"]::before {
  mask-image: url("images/altText_done.svg");
}
#altTextDialog .radioButton input:checked + label,
#altTextDialog .radioButton label:hover {
  background: var(--button-secondary-hover-bg-color);
}
#descriptionTextarea::placeholder { color: transparent !important; }
#altTextCancel > span,
#altTextSave > span { display: none !important; }
#altTextCancel,
#altTextSave { width: 36px; height: 36px; padding: 0; display: inline-flex; align-items: center; justify-content: center; }
#altTextCancel::before,
#altTextSave::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 20px;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
}
#altTextCancel::before { mask-image: url("images/messageBar_closingButton.svg"); background-color: var(--text-primary-color); }
#altTextSave::before { mask-image: url("images/annotation-check.svg"); background-color: var(--button-primary-fg-color); }

/* Signature dialogs: icon-only titles, tabs and buttons */
#addSignatureDialog #addSignatureDialogLabel,
#addSignatureDialog .title span,
#editSignatureDescriptionDialog .title span { display: none !important; }
/* Tabs as icon buttons */
#addSignatureOptions > button {
  width: 36px;
  height: 36px;
  padding: 0;
  border: none;
  border-radius: 6px;
  background: transparent;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
#addSignatureOptions > button::before {
  content: "";
  display: inline-block;
  width: 24px;
  height: 24px;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
  background-color: var(--text-primary-color);
}
#addSignatureTypeButton::before { mask-image: url("images/toolbarButton-editorFreeText.svg"); }
#addSignatureDrawButton::before { mask-image: url("images/toolbarButton-editorInk.svg"); }
#addSignatureImageButton::before { mask-image: url("images/toolbarButton-editorStamp.svg"); }
#addSignatureOptions > button[aria-selected="true"] { background: var(--button-secondary-hover-bg-color); }

/* Hide in-flow helper texts to keep UI icon-only */
#addSignatureDrawPlaceholder { display: none !important; }
label[for="addSignatureDrawThickness"],
#addSignatureDescriptionContainer > label,
#editSignatureDescriptionContainer > label { display: none !important; }

/* Clear / Cancel / Save / Update buttons as icons */
#clearSignatureButton > span,
#addSignatureCancelButton > span,
#addSignatureAddButton > span,
#editSignatureCancelButton > span,
#editSignatureUpdateButton > span { display: none !important; }

#clearSignatureButton,
#addSignatureCancelButton,
#addSignatureAddButton,
#editSignatureCancelButton,
#editSignatureUpdateButton {
  width: 36px;
  height: 36px;
  padding: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

#clearSignatureButton::before,
#addSignatureCancelButton::before,
#addSignatureAddButton::before,
#editSignatureCancelButton::before,
#editSignatureUpdateButton::before {
  content: "";
  display: inline-block;
  width: 20px;
  height: 20px;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: contain;
}
#clearSignatureButton::before { mask-image: url("images/editor-toolbar-delete.svg"); background-color: var(--text-primary-color); }
#addSignatureCancelButton::before { mask-image: url("images/messageBar_closingButton.svg"); background-color: var(--text-primary-color); }
#addSignatureAddButton::before { mask-image: url("images/annotation-check.svg"); background-color: var(--button-primary-fg-color); }
#editSignatureCancelButton::before { mask-image: url("images/messageBar_closingButton.svg"); background-color: var(--text-primary-color); }
#editSignatureUpdateButton::before { mask-image: url("images/annotation-check.svg"); background-color: var(--button-primary-fg-color); }
#addSignatureAddButton:disabled::before,
#editSignatureUpdateButton:disabled::before { opacity: var(--button-disabled-opacity); }

/* Comments Sidebar: compact, icon-first, accent bars, sticky header */
#editorCommentsSidebar {
  --sidebar-sticky-bg: var(--dialog-bg-color);
  --sidebar-border: var(--separator-color);
  --comment-accent-fallback: light-dark(#0062fa, #00cadb);
}

/* Sticky header with subtle separator */
#editorCommentsSidebarHeader {
  position: sticky;
  top: 0;
  z-index: 1;
  background: var(--sidebar-sticky-bg);
  border-bottom: 1px solid var(--sidebar-border);
}

/* Hide title text; keep count, show an icon instead */
#editorCommentsSidebarTitle { display: none !important; }
#editorCommentsSidebarHeader .commentCount::before {
  content: "";
  display: inline-block;
  width: 18px;
  height: 18px;
  margin-inline-end: 6px;
  mask: url("images/annotation-comment.svg") no-repeat center / contain;
  background-color: var(--text-primary-color);
}

#editorCommentsSidebarCloseButton { font-size: 0 !important; }

/* Count badge */
#editorCommentsSidebarCount {
  min-width: 20px;
  height: 20px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
  padding: 0 6px;
}

/* List items: neutral background, accent bar from --comment-accent-color */
#editorCommentsSidebarList .sidebarComment {
  position: relative;
  background: var(--comment-bg-color) !important; /* override any inline bg */
  transition: background-color 120ms ease, filter 120ms ease;
}
#editorCommentsSidebarList .sidebarComment::before {
  content: "";
  position: absolute;
  left: 0;
  top: 8px;
  bottom: 8px;
  width: 4px;
  border-radius: 4px;
  background: var(--comment-accent-color, var(--comment-accent-fallback));
}
#editorCommentsSidebarList .sidebarComment:hover {
  filter: var(--comment-hover-filter);
}
#editorCommentsSidebarList .sidebarComment.selected {
  background: var(--comment-hover-bg-color) !important;
}

/* Timestamp color tweak */
#editorCommentsSidebarList .sidebarComment time {
  color: var(--comment-date-fg-color);
}
